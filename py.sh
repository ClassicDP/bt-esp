#!/bin/bash

# –£–±–∏—Ä–∞–µ–º set -e, —á—Ç–æ–±—ã —Å–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
# set -e

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
handle_error() {
    local exit_code=$?
    local line_no=$1
    echo ""
    echo "‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ $line_no (–∫–æ–¥ –≤—ã—Ö–æ–¥–∞: $exit_code)"
    echo "‚ö†Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–ª–∏ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
    read -r
    return $exit_code
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
trap 'handle_error $LINENO' ERR

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞: –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ª–∏ —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ 'source' ---
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  echo "‚ùå Please run this script using 'source ./py.sh' to properly export environment variables"
  echo "‚ö†Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
  read -r
  exit 1
fi

echo "üîÑ Checking environment..."

# --- –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–Ω–µ—à–Ω–∏–π venv, –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω ---
if [[ -n "$VIRTUAL_ENV" ]]; then
  echo "‚ö†Ô∏è  Deactivating external virtual environment: $VIRTUAL_ENV"
  deactivate 2>/dev/null || true
fi

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É—Ç–µ–π ---
export IDF_PATH="$HOME/esp/esp-idf"
export IDF_PYTHON_ENV_PATH="$HOME/.espressif/python_env/idf5.2_py3.13_env"

# --- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ ESP-IDF ---
if [[ ! -d "$IDF_PATH" ]]; then
  echo "‚ùå ESP-IDF –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $IDF_PATH"
  echo "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ESP-IDF —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
  echo "‚ö†Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
  read -r
  return 1
fi

# --- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º certifi, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ---
echo "üì¶ Checking certifi installation..."
if ! "$IDF_PYTHON_ENV_PATH/bin/python" -m pip show certifi >/dev/null 2>&1; then
  echo "üì¶ Installing certifi into $IDF_PYTHON_ENV_PATH"
  if ! "$IDF_PYTHON_ENV_PATH/bin/python" -m pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org certifi; then
    echo "‚ùå Failed to install certifi"
    echo "‚ö†Ô∏è  –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ certifi. –ù–∞–∂–º–∏—Ç–µ Enter..."
    read -r
  else
    echo "‚úÖ certifi installed successfully"
  fi
else
  echo "‚úÖ certifi already installed"
fi

# --- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º packaging, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ---
echo "üì¶ Checking packaging installation..."
if ! "$IDF_PYTHON_ENV_PATH/bin/python" -m pip show packaging >/dev/null 2>&1; then
  echo "üì¶ Installing packaging into $IDF_PYTHON_ENV_PATH"
  if ! "$IDF_PYTHON_ENV_PATH/bin/python" -m pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org packaging; then
    echo "‚ùå Failed to install packaging"
    echo "‚ö†Ô∏è  –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ packaging. –ù–∞–∂–º–∏—Ç–µ Enter..."
    read -r
  else
    echo "‚úÖ packaging installed successfully"
  fi
else
  echo "‚úÖ packaging already installed"
fi

# --- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ESP-IDF ---
echo "üì¶ Installing required ESP-IDF Python packages..."
if command -v "$IDF_PYTHON_ENV_PATH/bin/python" >/dev/null 2>&1; then
  SSL_CERT_FILE="$("$IDF_PYTHON_ENV_PATH/bin/python" -m certifi 2>/dev/null || echo '')" \
  REQUESTS_CA_BUNDLE="$("$IDF_PYTHON_ENV_PATH/bin/python" -m certifi 2>/dev/null || echo '')" \
  "$IDF_PATH/tools/idf_tools.py" install-python-env || {
    echo "‚ùå Failed to install full ESP-IDF Python environment"
    echo "‚ö†Ô∏è  –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –∏–º–µ—é—â–∏–º—Å—è –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º. –ù–∞–∂–º–∏—Ç–µ Enter..."
    read -r
  }
fi

# --- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º SSL_CERT_FILE –∑–∞–Ω–æ–≤–æ (–ø–æ—Å–ª–µ certifi) ---
if command -v "$IDF_PYTHON_ENV_PATH/bin/python" >/dev/null 2>&1; then
  export SSL_CERT_FILE="$("$IDF_PYTHON_ENV_PATH/bin/python" -m certifi 2>/dev/null || echo '')"
fi

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
if [[ ! -x "$IDF_PYTHON_ENV_PATH/bin/python" ]]; then
  echo "‚ö†Ô∏è  Python environment not found at $IDF_PYTHON_ENV_PATH"
  echo "üì¶ Installing Python environment using idf_tools.py..."

  if ! "$IDF_PATH"/tools/idf_tools.py install-python-env; then
    echo "‚ùå Failed to install Python environment"
    echo "‚ö†Ô∏è  –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è. –ù–∞–∂–º–∏—Ç–µ Enter..."
    read -r
  else
    echo "‚úÖ Python environment installed"
  fi
fi

# --- –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ ESP-IDF ---
echo "‚úÖ Sourcing IDF environment from $IDF_PATH"
if ! . "$IDF_PATH/export.sh"; then
  echo "‚ùå Failed to source ESP-IDF environment"
  echo "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É ESP-IDF. –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
  read -r
fi

# --- –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –æ—Ç–∫—É–¥–∞-—Ç–æ –µ—â—ë) ---
PROJECT_DIR="$(dirname "${BASH_SOURCE[0]}")"
if ! cd "$PROJECT_DIR"; then
  echo "‚ùå Failed to change to project directory: $PROJECT_DIR"
  echo "‚ö†Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
  read -r
fi

# --- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ ---
if [[ ! -f "CMakeLists.txt" ]]; then
  echo "‚ö†Ô∏è  CMakeLists.txt –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
  echo "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ ESP32"
fi

if [[ $# -gt 0 ]]; then
  echo "‚ö†Ô∏è  Autostart of idf.py removed to keep shell interactive."
  echo "üëâ Run manually: idf.py $*"
fi

echo ""
echo "‚úÖ IDF environment ready. Examples:"
echo "   idf.py build"
echo "   idf.py flash monitor"
echo "   idf.py -p /dev/ttyUSB0 flash monitor"
echo "   idf.py menuconfig"
echo ""
echo "üìã Autostart commands available:"
echo "   autostart_load_default  # Load your WiFi/stream commands"
echo "   autostart_show         # Show current autostart config"
echo "   autostart_enable 1     # Enable autostart on boot"
echo ""
echo "üí° –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –æ—à–∏–±–∫–∏ –≤—ã—à–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:"
echo "   - –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ESP-IDF"
echo "   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
echo "   - –ó–∞–ø—É—Å—Ç–∏—Ç—å: $IDF_PATH/install.sh"
